import datetime

from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMedia
import clients_controller
import catalog_controller
from catalog_controller import get_makers, get_products

tastes_kw = {}


# All presets for the main menu keyboard
def markup_preset(call, bot):
    call_kw = {'mainmenu': "mainmenu", 'settings': "settings",
               'call_admin': "call_admin",
               'catalog': "catalog",
               'cart': "cart"
               }
    makers_kw = {}
    print(call.data)
    photo = None
    q = 1
    # –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ü–∏–∫–ª —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å callback`–∏ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π —Å–±–æ—Ä–∫–∏ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
    for key in get_makers():
        makers_kw[f'{str("maker") + str(q)}'] = key
        call_kw[f'{str("maker") + str(q)}'] = key
        q = q + 1
    # –û—Ç–ø–∏—Å–∫–∞, –µ—Å–ª–∏ –ø—Ä–∏—à–µ–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback
    keyboard = InlineKeyboardMarkup(row_width=2)
    text = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–∞–ø–∏—à–∏ /start"

    # –û–≥—Ä–æ–º–Ω–æ–µ –≤–µ—Ç–≤–ª–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—Å–∞–Ω—ã –≤—Å–µ –ø—Ä–µ—Å–µ—Ç—ã. –ü–æ –≤—ã—Ö–æ–¥–µ –∏–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤ bot.message_edit –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è
    # –æ–±—ä–µ–∫—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    if call.data == call_kw['mainmenu']:

        catalog_btn = InlineKeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥ üìã", callback_data="catalog")
        cart_btn = InlineKeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞ üõí", callback_data="cart")
        call_btn = InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º üë∑‚Äç", callback_data="call_admin")
        keyboard.add(catalog_btn, cart_btn, call_btn)
        text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤ —ç—Ç–æ–º –æ–∫–Ω–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏"
        photo = open(f"photos/mm.jpg", "rb")


    elif call.data == call_kw['settings']:
        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data="mainmenu")
        keyboard.add(back_btn)
        text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô"

    elif call.data == call_kw['catalog']:

        text = "–í—ã–±–µ—Ä–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è"
        # –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ—Ä—É—Ç—Å—è –∏–º–µ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –≤ –∫–Ω–æ–ø–∫–∏
        makers = get_makers()
        for maker in makers:
            keyboard.add(InlineKeyboardButton(text=maker, callback_data=maker))

        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data="mainmenu")
        keyboard.add(back_btn)
        photo = open(f"photos/mm.jpg", "rb")


    elif call.data == call_kw['call_admin']:
        text = "–ù–∞–ø–∏—à–∏ –º–Ω–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º: @ewoksicilin"
        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data="mainmenu")
        keyboard.add(back_btn)
        photo = open(f"photos/ewoksicilin.jpg", "rb")


    elif call.data in makers_kw.values():
        text = "–¢–æ–≤–∞—Ä—ã –ø—Ä–æ–∏–≤–æ–¥–∏—Ç–µ–ª—è –≤ –Ω–∞–ª–∏—á–∏–∏:"
        products = get_products(call.data)
        count = 1

        for product in products:
            taste = f"{str(call.data) + ', ' + str(product)}"
            keyboard.add(InlineKeyboardButton(text=product, callback_data=taste))

            tastes_kw[f'taste{count}'] = taste
            count += 1

        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data="catalog")
        keyboard.add(back_btn)
        photo = open(f"photos/{call.data}.jpg", "rb")

    elif call.data in tastes_kw.values():

        cb_product = call.data.split(sep=", ")
        info = catalog_controller.find_product(cb_product[0], cb_product[1])

        text = f"{info[0]} {info[1]}\n–¢—è–≥: {info[2]}\n–¶–µ–Ω–∞: {info[3]}\n–í –Ω–∞–ª–∏—á–∏–∏: {info[4]}"
        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data=f"{cb_product[0]}")
        add_to_cart = InlineKeyboardButton(text="–í –∫–æ—Ä–∑–∏–Ω—É üõí", callback_data=f"to_cart {call.data}")
        keyboard.add(add_to_cart, back_btn)



    elif "to_cart" in call.data:
        text = "–í –∫–æ—Ä–∑–∏–Ω–µ ‚úÖ"
        clients_controller.add_to_cart(call)

        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data='catalog')
        cart_btn = InlineKeyboardButton(text="–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞", callback_data="cart")
        keyboard.add(back_btn, cart_btn)



    elif call.data == call_kw['cart']:
        text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞: \n"
        products = clients_controller.get_cart(call)

        for i in range(len(products)):
            text = text + "-"+products[i]["maker"] + " " + products[i]["taste"] + "\n"

        book_btn = InlineKeyboardButton(text="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="book")

        clear_btn = InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart")
        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data='mainmenu')
        keyboard.add(clear_btn, back_btn)
        photo = open(f"photos/cart.jpg", "rb")

        if len(products) > 0:
            keyboard.add(book_btn)

    elif call.data == "clear_cart":
        clients_controller.clear_cart(call)
        text = "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞: \n"
        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data='mainmenu')
        keyboard.add(back_btn)

    elif call.data == "book":
        info = clients_controller.add_book(call)
        text = f"–í–∞—à –∑–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω\n"

        back_btn = InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚óÄ", callback_data='mainmenu')
        keyboard.add(back_btn)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=text,
                              reply_markup=keyboard)

        keyboard_offer = InlineKeyboardMarkup()
        cancel = InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå", callback_data="cancel")
        keyboard_offer.add(cancel)

        bot.send_message(chat_id=call.message.chat.id, text=f"–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: #{info['key']}",
                         reply_markup=keyboard_offer)

        bot.send_message(chat_id=1931633887,
                         text=f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑: #{info['key']}\nUsername @{info['username']}, {info['cart']}\n{info['chat_id']}")
        clients_controller.clear_cart(call)

        for i in range(len(info["cart"])):
            catalog_controller.catalog_sell(info["cart"][i]['maker'], info["cart"][i]['taste'])


    elif call.data == "cancel":
        cur_text = call.message.text

        print(call.message.text[15:len(call.message.text)])
        text = cur_text + "\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –∑–∞–∫–∞–∑ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞."
        yes_btn = InlineKeyboardButton(text="‚úÖ", callback_data="yes")
        no_btn = InlineKeyboardButton(text="‚ùå", callback_data="no")
        keyboard.add(no_btn, yes_btn)



    elif call.data == "yes":
        cur_text = call.message.text
        key = str(cur_text)[15:20]
        info = clients_controller.cancel_book(key)

        for pos in info['cart']:
            catalog_controller.catalog_add(pos['maker'], pos['taste'], count=1, puffs=1200, price=1)

        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)



    elif call.data == "no":
        text = call.message.text.replace("\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç –∑–∞–∫–∞–∑ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.", "",
                                         1)

        cancel = InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå", callback_data="cancel")
        keyboard.add(cancel)


    elif call.data == "close_admin":
        cur_text = call.message.text

        text = cur_text + "\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–∫—Ä–æ–µ—Ç –∑–∞–∫–∞–∑ –∏ —É–¥–∞–ª–∏—Ç –µ–≥–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞."
        yes_btn = InlineKeyboardButton(text="‚úÖ", callback_data="yes_c")
        no_btn = InlineKeyboardButton(text="‚ùå", callback_data="no_c")
        keyboard.add(no_btn, yes_btn)

    elif call.data == 'yes_c':
        cur_text = call.message.text
        key = cur_text.split(sep="\n")[1]
        print(key)
        clients_controller.cancel_book(key)

        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        return 1

    elif call.data == "no_c":
        text = call.message.text.replace(
            "\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–∫—Ä–æ–µ—Ç –∑–∞–∫–∞–∑ –∏ —É–¥–∞–ª–∏—Ç –µ–≥–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.", "",
            1)

        close = InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å –∑–∞–∫–∞–∑", callback_data="close_admin")
        keyboard.add(close)

    elif call.data == "cat_plus":
        text = call.message.text
        first_str = text.split(sep="\n")[0]
        maker = first_str.split(sep=", ")[0]
        taste = first_str.split(sep=", ")[1]
        product = catalog_controller.catalog_change_count(maker, taste, 1)
        text = f"{product['maker']}, {product['taste']}\n–¢—è–≥: {product['puffs']}\n–¶–µ–Ω–∞: {product['price']}\n–ö–æ–ª-–≤–æ: {product['count']}"
        plus_btn = InlineKeyboardButton(text="+1", callback_data="cat_plus")
        minus_btn = InlineKeyboardButton(text="-1", callback_data="cat_minus")
        keyboard.add(plus_btn, minus_btn)

    elif call.data == "cat_minus":
        text = call.message.text
        first_str = text.split(sep="\n")[0]
        maker = first_str.split(sep=", ")[0]
        taste = first_str.split(sep=", ")[1]
        product = catalog_controller.catalog_change_count(maker, taste, -1)
        text = f"{product['maker']}, {product['taste']}\n–¢—è–≥: {product['puffs']}\n–¶–µ–Ω–∞: {product['price']}\n–ö–æ–ª-–≤–æ: {product['count']}"
        plus_btn = InlineKeyboardButton(text="+1", callback_data="cat_plus")
        minus_btn = InlineKeyboardButton(text="-1", callback_data="cat_minus")
        keyboard.add(plus_btn, minus_btn)

    if photo != None:
         bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,
                           media=InputMedia(type='photo', media=photo, caption=text), reply_markup= keyboard)
    else:
        try:
            bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=text, reply_markup=keyboard)
        except:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=text, reply_markup=keyboard)